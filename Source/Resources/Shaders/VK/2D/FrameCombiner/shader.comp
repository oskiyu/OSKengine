#version 460

layout (local_size_x = 8, local_size_y = 8) in;

layout (set = 0, binding = 0) uniform sampler2D inputImage;

#ifdef SHADER_8
layout (set = 1, binding = 0, rgba8) uniform image2D outputImage;
#elif defined(SHADER_16)
layout (set = 1, binding = 0, rgba16) uniform image2D outputImage;
#endif

void main() {
    const ivec2 coords = ivec2(gl_GlobalInvocationID.xy);
    const ivec2 imageSize = imageSize(outputImage);

    if (coords.x > imageSize.x || coords.y > imageSize.y)
        return;
    
    const vec4 prevColor = imageLoad(outputImage, coords);
    const vec4 inColor = texelFetch(inputImage, coords, 0);

    const float inAlpha = clamp(inColor.a, 0, 1);

    const vec4 outColor = mix(prevColor, inColor, inAlpha);

    const float outAlpha = clamp(outColor.a, 0, 1);

    imageStore(outputImage, coords, vec4(outColor.rgb, outAlpha));
}
